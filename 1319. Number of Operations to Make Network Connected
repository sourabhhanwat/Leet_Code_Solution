class Solution(object):
    def makeConnected(self, n, connections):
        if len(connections) < n - 1:
            return -1
        
        parent = [i for i in range(n)]
        
        for connection in connections:
            parent1 = self.findParent(parent, connection[0])
            parent2 = self.findParent(parent, connection[1])
            if parent1 != parent2:
                parent[parent1] = parent2
        
        numSets = 0
        for i in range(n):
            if parent[i] == i:
                numSets += 1
        
        return numSets - 1
    
    def findParent(self, parent, node):
        if parent[node] != node:
            parent[node] = self.findParent(parent, parent[node])
        return parent[node]
